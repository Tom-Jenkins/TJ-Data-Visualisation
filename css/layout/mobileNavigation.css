.navigation {
    color: var(--color-black);
    user-select: none;
    /* display: none; */

    input.navigation__checkbox {
        display: none;
    }

    label.navigation__button {
        cursor: pointer;
        background-color: white;
        height: 7rem;
        width: 7rem;
        border-radius: 50%;
        position: fixed;
        top: 2rem;
        right: 2rem;
        z-index: 2000;
        box-shadow: 0 0 2rem var(--colour-black);
        text-align: center;
    }

    div.navigation__background {
        height: 6rem;
        width: 6rem;
        border-radius: 50%;
        position: fixed;
        top: 2.5rem;
        right: 2.5rem;
        background-image: radial-gradient(var(--colour-secondary), var(--colour-primary));
        z-index: 1000;
        transition: transform .8s cubic-bezier(0.86, 0, 0.07, 1);
    }

    /* When checked apply styles to input sibling – navigation background */
    input.navigation__checkbox:checked ~ div.navigation__background {
        transform: scale(var(--scale-factor));
    }

    /* ICON hamburger */
    label > span.navigation__icon {
        position: relative;
        margin-top: 3.5rem;

        &,
        &::before,
        &::after {
            display: inline-block;
            width: 3rem;
            height: 2px;
            background-color: var(--colour-black);
        }

        &::before,
        &::after {
            content: "";
            position: absolute;
            left: 0;
            transition: all .2s;
        }

        /* Space between hamburgers */
        &::before { top: -.8rem; }
        &::after { top: .8rem; }
    }

    /* 
    The "+" is used because checkbox is adjacent sibling to button
    Then select the button child element (icon)
    */
    input.navigation__checkbox:checked + label.navigation__button span.navigation__icon {
        background-color: transparent;
    }

    /* Rotate outer hamburger lines */
    input.navigation__checkbox:checked + label.navigation__button span.navigation__icon::before {
        top: 0;
        transform: rotate(135deg);
    }
    input.navigation__checkbox:checked + label.navigation__button span.navigation__icon::after {
        top: 0;
        transform: rotate(-135deg);
    }

    /* When checked apply styles to input sibling – navigation nav */
    input.navigation__checkbox:checked ~ nav.navigation__nav {
        opacity: 1;
        width: 100%;
        pointer-events: auto;
    }

    /* When unchecked apply these styles */
    input.navigation__checkbox:not(:checked) ~ nav.navigation__nav {
        opacity: 0;
        transition: opacity .3s linear;
    }

    /* Navigation container when open */
    nav.navigation__nav {
        height: 100vh;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1500;
        border-radius: 10px;
        pointer-events: none;

        /* Hide navigation list by default */
        opacity: 0;
        transition: opacity 2s ease-in-out;

        ul.navigation__list {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            list-style: none;
            text-align: center;

            li.navigation__item {
                margin: 2rem;
                
                a.navigation__link {
                    &:link, &:visited {
                        display: inline-block;
                        font-size: 3rem;
                        font-weight: 700;
                        padding: 1rem 4rem;
                        letter-spacing: 1rem;
                        color: var(--colour-white);
                        text-decoration: none;
                        text-transform: uppercase;
                        border-radius: 10px;
                        
                        /* Initial state without animations */
                        background-size: 0% 100%;
                        background-repeat: no-repeat;
                        background-position: left;
                    }         

                    &:hover {
                        background-image: linear-gradient(to right, var(--colour-white) 0%, var(--colour-white) 100%);
                        background-size: 100% 100%;
                        color: var(--colour-black);
        
                        /* Add animation only for hover */
                        transition: background-size 0.3s ease-in-out, color 0.3s ease-in-out;
                    }

                    &:active {
                        /* Need to cancel animation states on hover so that this works */
                        background-image: none;
                        transition: none;
                        
                        background-color: var(--colour-white);
                        color: var(--colour-black);
                        font-weight: 900;
                        transform: scale(0.95); /* Adjust size of button */
                    }
                }
            }
        }
    }
}

@media (min-width: 920px) {
    .navigation {
        display: none;
    }
}